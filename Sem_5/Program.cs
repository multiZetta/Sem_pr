// Задача 25: Напишите метод, который принимает на вход два числа (A и B) 
// и возводит число A в целую степень B.
// 3, 5 -> 243 (3⁵)
// 2, 4 -> 16
// без использования math.pow
/* 
ТЕОРИЯ
если отрицательное -b в степени отрицательной -N, 
то это выглядит так: 1/(b * b*........*b ) N раз
например 5 в (-2) степени 1/(5*5)=1/25=0.04
0 в степени 0 = не определено в математике можно написать как NaN

в задаче эти условия надо прописывать, степень положительная или отрицательная

/* double Pow(int a, int b)

    bool flaq = bool > 0;
    b = Math.Abs(b);     // можно так еще прописать, это абсолютная величина
    if (b < 0) b = -b;
     */

// РЕШЕНИЕ

double Pow(int a, int b)
{

    if (a == 0 && b == 0) return double.NaN;  // если в воде все 0 , то  дай нам NaN Not Number не число
    bool flaq = b > 0;
    if (b < 0) b = -b;
    int res = 1;                      // для хранения результата. 1 это в данном случае нейтральный по умножению элемент
    for (int i = 0; i < b; i++)
    {
        res *= a;                  // *=   это означает res = res * a
    }
    if (flaq) return res;    //дальше идет проверка/ Если выполняется flaq, то дай результат
    else return 1.0 / res;         // в противном случае
}
Console.WriteLine(Pow(5, -2));   // если в отрицательной степени
Console.WriteLine(Pow(5, 2));   // если в положительной степени
Console.WriteLine(Pow(0, 0));   // если все цифры 0
